// BEGIN GENERATED BY /Users/kueda/projects/eclipse/workspace/iNaturalist/rails2android.rb AT Fri Dec 09 22:31:55 -0800 2011
package org.inaturalist.android;
import java.io.Serializable;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.HashMap;
import org.apache.http.NameValuePair;
import org.apache.http.message.BasicNameValuePair;
import org.json.JSONObject;
import android.content.ContentUris;
import android.content.ContentValues;
import android.database.Cursor;
import android.net.Uri;
import android.provider.BaseColumns;

public class ObservationPhoto implements BaseColumns, Serializable {
    public Integer _id;
    public Timestamp _created_at;
    public Integer _observation_id;
    public Integer _photo_id;
    public Timestamp _synced_at;
    public Timestamp _updated_at;
    public Timestamp created_at;
    public Integer id;
    public Integer observation_id;
    public Integer photo_id;
    public Integer position;
    public Timestamp updated_at;


    public static final String TABLE_NAME = "observation_photos";
    public static final int OBSERVATION_PHOTOS_URI_CODE = 1801;
    public static final int OBSERVATION_PHOTO_ID_URI_CODE = 1686;
    public static HashMap<String, String> PROJECTION_MAP;
    public static final String AUTHORITY = "org.inaturalist.android.observation_photo";
    public static final Uri    CONTENT_URI = Uri.parse("content://" + AUTHORITY + "/observation_photos");
    public static final String CONTENT_TYPE = "vnd.android.cursor.dir/vnd.google.observation_photo";
    public static final String CONTENT_ITEM_TYPE = "vnd.android.cursor.item/vnd.google.observation_photo";
    public static final String DEFAULT_SORT_ORDER = "_id DESC";
    public static final String _CREATED_AT = "_created_at";
    public static final String _OBSERVATION_ID = "_observation_id";
    public static final String _PHOTO_ID = "_photo_id";
    public static final String _SYNCED_AT = "_synced_at";
    public static final String _UPDATED_AT = "_updated_at";
    public static final String CREATED_AT = "created_at";
    public static final String ID = "id";
    public static final String OBSERVATION_ID = "observation_id";
    public static final String PHOTO_ID = "photo_id";
    public static final String POSITION = "position";
    public static final String UPDATED_AT = "updated_at";


    public static final String[] PROJECTION = new String[] {
        ObservationPhoto._ID,
        ObservationPhoto._CREATED_AT,
        ObservationPhoto._OBSERVATION_ID,
        ObservationPhoto._PHOTO_ID,
        ObservationPhoto._SYNCED_AT,
        ObservationPhoto._UPDATED_AT,
        ObservationPhoto.CREATED_AT,
        ObservationPhoto.ID,
        ObservationPhoto.OBSERVATION_ID,
        ObservationPhoto.PHOTO_ID,
        ObservationPhoto.POSITION,
        ObservationPhoto.UPDATED_AT
    };

    static {
        PROJECTION_MAP = new HashMap<String, String>();
        PROJECTION_MAP.put(ObservationPhoto._ID, ObservationPhoto._ID);
        PROJECTION_MAP.put(ObservationPhoto._CREATED_AT, ObservationPhoto._CREATED_AT);
        PROJECTION_MAP.put(ObservationPhoto._OBSERVATION_ID, ObservationPhoto._OBSERVATION_ID);
        PROJECTION_MAP.put(ObservationPhoto._PHOTO_ID, ObservationPhoto._PHOTO_ID);
        PROJECTION_MAP.put(ObservationPhoto._SYNCED_AT, ObservationPhoto._SYNCED_AT);
        PROJECTION_MAP.put(ObservationPhoto._UPDATED_AT, ObservationPhoto._UPDATED_AT);
        PROJECTION_MAP.put(ObservationPhoto.CREATED_AT, ObservationPhoto.CREATED_AT);
        PROJECTION_MAP.put(ObservationPhoto.ID, ObservationPhoto.ID);
        PROJECTION_MAP.put(ObservationPhoto.OBSERVATION_ID, ObservationPhoto.OBSERVATION_ID);
        PROJECTION_MAP.put(ObservationPhoto.PHOTO_ID, ObservationPhoto.PHOTO_ID);
        PROJECTION_MAP.put(ObservationPhoto.POSITION, ObservationPhoto.POSITION);
        PROJECTION_MAP.put(ObservationPhoto.UPDATED_AT, ObservationPhoto.UPDATED_AT);

    }

    public ObservationPhoto() {}

    public ObservationPhoto(Cursor c) {
        if (c.getPosition() == -1) {
            c.moveToFirst();
        }
        BetterCursor bc = new BetterCursor(c);
        this._id = bc.getInt(_ID);
        this._created_at = bc.getTimestamp(_CREATED_AT);
        this._observation_id = bc.getInteger(_OBSERVATION_ID);
        this._photo_id = bc.getInteger(_PHOTO_ID);
        this._synced_at = bc.getTimestamp(_SYNCED_AT);
        this._updated_at = bc.getTimestamp(_UPDATED_AT);
        this.created_at = bc.getTimestamp(CREATED_AT);
        this.id = bc.getInteger(ID);
        this.observation_id = bc.getInteger(OBSERVATION_ID);
        this.photo_id = bc.getInteger(PHOTO_ID);
        this.position = bc.getInteger(POSITION);
        this.updated_at = bc.getTimestamp(UPDATED_AT);

    }

    public ObservationPhoto(BetterJSONObject o) {
        this._created_at = o.getTimestamp("_created_at");
        this._observation_id = o.getInteger("_observation_id");
        this._photo_id = o.getInteger("_photo_id");
        this._synced_at = o.getTimestamp("_synced_at");
        this._updated_at = o.getTimestamp("_updated_at");
        this.created_at = o.getTimestamp("created_at");
        this.id = o.getInteger("id");
        this.observation_id = o.getInteger("observation_id");
        this.photo_id = o.getInteger("photo_id");
        this.position = o.getInteger("position");
        this.updated_at = o.getTimestamp("updated_at");

    }

    @Override
    public String toString() {
        return "ObservationPhoto(id: " + id + ", _id: " + _id + ")";
    }

    public JSONObject toJSONObject() {
        BetterJSONObject bo = new BetterJSONObject();
        bo.put("_created_at", _created_at);
        bo.put("_observation_id", _observation_id);
        bo.put("_photo_id", _photo_id);
        bo.put("_synced_at", _synced_at);
        bo.put("_updated_at", _updated_at);
        bo.put("created_at", created_at);
        bo.put("id", id);
        bo.put("observation_id", observation_id);
        bo.put("photo_id", photo_id);
        bo.put("position", position);
        bo.put("updated_at", updated_at);

        return bo.getJSONObject();
    }

    public Uri getUri() {
        if (_id == null) {
            return null;
        } else {
            return ContentUris.withAppendedId(CONTENT_URI, _id);
        }
    }

    public void merge(ObservationPhoto observation_photo) {
        if (this._updated_at.before(observation_photo.updated_at)) {
            // overwrite
            this.created_at = observation_photo.created_at;
            this.id = observation_photo.id;
            this.observation_id = observation_photo.observation_id;
            this.photo_id = observation_photo.photo_id;
            this.position = observation_photo.position;
            this.updated_at = observation_photo.updated_at;

        } else {
            // set if null
            if (this.created_at == null) { this.created_at = observation_photo.created_at; }
            if (this.id == null) { this.id = observation_photo.id; }
            if (this.observation_id == null) { this.observation_id = observation_photo.observation_id; }
            if (this.photo_id == null) { this.photo_id = observation_photo.photo_id; }
            if (this.position == null) { this.position = observation_photo.position; }
            if (this.updated_at == null) { this.updated_at = observation_photo.updated_at; }

        }
    }

    public ContentValues getContentValues() {
        ContentValues cv = new ContentValues();
        if (_created_at != null) { cv.put(_CREATED_AT, _created_at.getTime()); }
        cv.put(_OBSERVATION_ID, _observation_id);
        cv.put(_PHOTO_ID, _photo_id);
        if (_synced_at != null) { cv.put(_SYNCED_AT, _synced_at.getTime()); }
        if (_updated_at != null) { cv.put(_UPDATED_AT, _updated_at.getTime()); }
        if (created_at != null) { cv.put(CREATED_AT, created_at.getTime()); }
        cv.put(ID, id);
        cv.put(OBSERVATION_ID, observation_id);
        cv.put(PHOTO_ID, photo_id);
        cv.put(POSITION, position);
        if (updated_at != null) { cv.put(UPDATED_AT, updated_at.getTime()); }

        return cv;
    }

    public ArrayList<NameValuePair> getParams() {
        final ArrayList<NameValuePair> params = new ArrayList<NameValuePair>();
        if (observation_id != null) { params.add(new BasicNameValuePair("observation_photo[observation_id]", observation_id.toString())); }
        if (photo_id != null) { params.add(new BasicNameValuePair("observation_photo[photo_id]", photo_id.toString())); }
        if (position != null) { params.add(new BasicNameValuePair("observation_photo[position]", position.toString())); }

        return params;
    }

    public static String sqlCreate() {
        return "CREATE TABLE " + TABLE_NAME + " ("
                + ObservationPhoto._ID + " INTEGER PRIMARY KEY,"
                + "_created_at INTEGER,"
                + "_observation_id INTEGER,"
                + "_photo_id INTEGER,"
                + "_synced_at INTEGER,"
                + "_updated_at INTEGER,"
                + "created_at INTEGER,"
                + "id INTEGER,"
                + "observation_id INTEGER,"
                + "photo_id INTEGER,"
                + "position INTEGER,"
                + "updated_at INTEGER"
                + ");";
    }
}
// END GENERATED BY /Users/kueda/projects/eclipse/workspace/iNaturalist/rails2android.rb AT Fri Dec 09 22:31:55 -0800 2011
